/*! For license information please see bowser-1.9.4.min.js.LICENSE.txt */ ! function(e, i, s) {
    "undefined" != typeof module && module.exports ? module.exports = s() : "function" == typeof define && define.amd ? define(i, s) : e[i] = s()
}(this, "bowser", (function() {
    function e(e) {
        function i(i) {
            var s = e.match(i);
            return s && s.length > 1 && s[1] || ""
        }

        function s(i) {
            var s = e.match(i);
            return s && s.length > 1 && s[2] || ""
        }
        var r, t = i(/(ipod|iphone|ipad)/i).toLowerCase(),
            a = !/like android/i.test(e) && /android/i.test(e),
            d = /nexus\s*[0-6]\s*/i.test(e),
            m = !d && /nexus\s*[0-9]+/i.test(e),
            v = /CrOS/.test(e),
            l = /silk/i.test(e),
            c = /sailfish/i.test(e),
            p = /tizen/i.test(e),
            u = /(web|hpw)(o|0)s/i.test(e),
            f = /windows phone/i.test(e),
            w = (/SamsungBrowser/i.test(e), !f && /windows/i.test(e)),
            h = !t && !l && /macintosh/i.test(e),
            b = !a && !c && !p && !u && /linux/i.test(e),
            g = s(/edg([ea]|ios)\/(\d+(\.\d+)?)/i),
            k = i(/version\/(\d+(\.\d+)?)/i),
            x = /tablet/i.test(e) && !/tablet pc/i.test(e),
            y = !x && /[^-]mobi/i.test(e),
            S = /xbox/i.test(e);
        /opera/i.test(e) ? r = {
            name: "Opera",
            opera: n,
            version: k || i(/(?:opera|opr|opios)[\s\/](\d+(\.\d+)?)/i)
        } : /opr\/|opios/i.test(e) ? r = {
            name: "Opera",
            opera: n,
            version: i(/(?:opr|opios)[\s\/](\d+(\.\d+)?)/i) || k
        } : /SamsungBrowser/i.test(e) ? r = {
            name: "Samsung Internet for Android",
            samsungBrowser: n,
            version: k || i(/(?:SamsungBrowser)[\s\/](\d+(\.\d+)?)/i)
        } : /Whale/i.test(e) ? r = {
            name: "NAVER Whale browser",
            whale: n,
            version: i(/(?:whale)[\s\/](\d+(?:\.\d+)+)/i)
        } : /MZBrowser/i.test(e) ? r = {
            name: "MZ Browser",
            mzbrowser: n,
            version: i(/(?:MZBrowser)[\s\/](\d+(?:\.\d+)+)/i)
        } : /coast/i.test(e) ? r = {
            name: "Opera Coast",
            coast: n,
            version: k || i(/(?:coast)[\s\/](\d+(\.\d+)?)/i)
        } : /focus/i.test(e) ? r = {
            name: "Focus",
            focus: n,
            version: i(/(?:focus)[\s\/](\d+(?:\.\d+)+)/i)
        } : /yabrowser/i.test(e) ? r = {
            name: "Yandex Browser",
            yandexbrowser: n,
            version: k || i(/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i)
        } : /ucbrowser/i.test(e) ? r = {
            name: "UC Browser",
            ucbrowser: n,
            version: i(/(?:ucbrowser)[\s\/](\d+(?:\.\d+)+)/i)
        } : /mxios/i.test(e) ? r = {
            name: "Maxthon",
            maxthon: n,
            version: i(/(?:mxios)[\s\/](\d+(?:\.\d+)+)/i)
        } : /epiphany/i.test(e) ? r = {
            name: "Epiphany",
            epiphany: n,
            version: i(/(?:epiphany)[\s\/](\d+(?:\.\d+)+)/i)
        } : /puffin/i.test(e) ? r = {
            name: "Puffin",
            puffin: n,
            version: i(/(?:puffin)[\s\/](\d+(?:\.\d+)?)/i)
        } : /sleipnir/i.test(e) ? r = {
            name: "Sleipnir",
            sleipnir: n,
            version: i(/(?:sleipnir)[\s\/](\d+(?:\.\d+)+)/i)
        } : /k-meleon/i.test(e) ? r = {
            name: "K-Meleon",
            kMeleon: n,
            version: i(/(?:k-meleon)[\s\/](\d+(?:\.\d+)+)/i)
        } : f ? (r = {
            name: "Windows Phone",
            osname: "Windows Phone",
            windowsphone: n
        }, g ? (r.msedge = n, r.version = g) : (r.msie = n, r.version = i(/iemobile\/(\d+(\.\d+)?)/i))) : /msie|trident/i.test(e) ? r = {
            name: "Internet Explorer",
            msie: n,
            version: i(/(?:msie |rv:)(\d+(\.\d+)?)/i)
        } : v ? r = {
            name: "Chrome",
            osname: "Chrome OS",
            chromeos: n,
            chromeBook: n,
            chrome: n,
            version: i(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
        } : /edg([ea]|ios)/i.test(e) ? r = {
            name: "Microsoft Edge",
            msedge: n,
            version: g
        } : /vivaldi/i.test(e) ? r = {
            name: "Vivaldi",
            vivaldi: n,
            version: i(/vivaldi\/(\d+(\.\d+)?)/i) || k
        } : c ? r = {
            name: "Sailfish",
            osname: "Sailfish OS",
            sailfish: n,
            version: i(/sailfish\s?browser\/(\d+(\.\d+)?)/i)
        } : /seamonkey\//i.test(e) ? r = {
            name: "SeaMonkey",
            seamonkey: n,
            version: i(/seamonkey\/(\d+(\.\d+)?)/i)
        } : /firefox|iceweasel|fxios/i.test(e) ? (r = {
            name: "Firefox",
            firefox: n,
            version: i(/(?:firefox|iceweasel|fxios)[ \/](\d+(\.\d+)?)/i)
        }, /\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(e) && (r.firefoxos = n, r.osname = "Firefox OS")) : l ? r = {
            name: "Amazon Silk",
            silk: n,
            version: i(/silk\/(\d+(\.\d+)?)/i)
        } : /phantom/i.test(e) ? r = {
            name: "PhantomJS",
            phantom: n,
            version: i(/phantomjs\/(\d+(\.\d+)?)/i)
        } : /slimerjs/i.test(e) ? r = {
            name: "SlimerJS",
            slimer: n,
            version: i(/slimerjs\/(\d+(\.\d+)?)/i)
        } : /blackberry|\bbb\d+/i.test(e) || /rim\stablet/i.test(e) ? r = {
            name: "BlackBerry",
            osname: "BlackBerry OS",
            blackberry: n,
            version: k || i(/blackberry[\d]+\/(\d+(\.\d+)?)/i)
        } : u ? (r = {
            name: "WebOS",
            osname: "WebOS",
            webos: n,
            version: k || i(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)
        }, /touchpad\//i.test(e) && (r.touchpad = n)) : /bada/i.test(e) ? r = {
            name: "Bada",
            osname: "Bada",
            bada: n,
            version: i(/dolfin\/(\d+(\.\d+)?)/i)
        } : p ? r = {
            name: "Tizen",
            osname: "Tizen",
            tizen: n,
            version: i(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i) || k
        } : /qupzilla/i.test(e) ? r = {
            name: "QupZilla",
            qupzilla: n,
            version: i(/(?:qupzilla)[\s\/](\d+(?:\.\d+)+)/i) || k
        } : /chromium/i.test(e) ? r = {
            name: "Chromium",
            chromium: n,
            version: i(/(?:chromium)[\s\/](\d+(?:\.\d+)?)/i) || k
        } : /chrome|crios|crmo/i.test(e) ? r = {
            name: "Chrome",
            chrome: n,
            version: i(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
        } : a ? r = {
            name: "Android",
            version: k
        } : /safari|applewebkit/i.test(e) ? (r = {
            name: "Safari",
            safari: n
        }, k && (r.version = k)) : t ? (r = {
            name: "iphone" == t ? "iPhone" : "ipad" == t ? "iPad" : "iPod"
        }, k && (r.version = k)) : r = /googlebot/i.test(e) ? {
            name: "Googlebot",
            googlebot: n,
            version: i(/googlebot\/(\d+(\.\d+))/i) || k
        } : {
            name: i(/^(.*)\/(.*) /),
            version: s(/^(.*)\/(.*) /)
        }, !r.msedge && /(apple)?webkit/i.test(e) ? (/(apple)?webkit\/537\.36/i.test(e) ? (r.name = r.name || "Blink", r.blink = n) : (r.name = r.name || "Webkit", r.webkit = n), !r.version && k && (r.version = k)) : !r.opera && /gecko\//i.test(e) && (r.name = r.name || "Gecko", r.gecko = n, r.version = r.version || i(/gecko\/(\d+(\.\d+)?)/i)), r.windowsphone || !a && !r.silk ? !r.windowsphone && t ? (r[t] = n, r.ios = n, r.osname = "iOS") : h ? (r.mac = n, r.osname = "macOS") : S ? (r.xbox = n, r.osname = "Xbox") : w ? (r.windows = n, r.osname = "Windows") : b && (r.linux = n, r.osname = "Linux") : (r.android = n, r.osname = "Android");
        var B = "";
        r.windows ? B = function(e) {
            switch (e) {
                case "NT":
                    return "NT";
                case "XP":
                    return "XP";
                case "NT 5.0":
                    return "2000";
                case "NT 5.1":
                    return "XP";
                case "NT 5.2":
                    return "2003";
                case "NT 6.0":
                    return "Vista";
                case "NT 6.1":
                    return "7";
                case "NT 6.2":
                    return "8";
                case "NT 6.3":
                    return "8.1";
                case "NT 10.0":
                    return "10";
                default:
                    return
            }
        }(i(/Windows ((NT|XP)( \d\d?.\d)?)/i)) : r.windowsphone ? B = i(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i) : r.mac ? B = (B = i(/Mac OS X (\d+([_\.\s]\d+)*)/i)).replace(/[_\s]/g, ".") : t ? B = (B = i(/os (\d+([_\s]\d+)*) like mac os x/i)).replace(/[_\s]/g, ".") : a ? B = i(/android[ \/-](\d+(\.\d+)*)/i) : r.webos ? B = i(/(?:web|hpw)os\/(\d+(\.\d+)*)/i) : r.blackberry ? B = i(/rim\stablet\sos\s(\d+(\.\d+)*)/i) : r.bada ? B = i(/bada\/(\d+(\.\d+)*)/i) : r.tizen && (B = i(/tizen[\/\s](\d+(\.\d+)*)/i)), B && (r.osversion = B);
        var O = !r.windows && B.split(".")[0];
        return x || m || "ipad" == t || a && (3 == O || O >= 4 && !y) || r.silk ? r.tablet = n : (y || "iphone" == t || "ipod" == t || a || d || r.blackberry || r.webos || r.bada) && (r.mobile = n), r.msedge || r.msie && r.version >= 10 || r.yandexbrowser && r.version >= 15 || r.vivaldi && r.version >= 1 || r.chrome && r.version >= 20 || r.samsungBrowser && r.version >= 4 || r.whale && 1 === o([r.version, "1.0"]) || r.mzbrowser && 1 === o([r.version, "6.0"]) || r.focus && 1 === o([r.version, "1.0"]) || r.firefox && r.version >= 20 || r.safari && r.version >= 6 || r.opera && r.version >= 10 || r.ios && r.osversion && r.osversion.split(".")[0] >= 6 || r.blackberry && r.version >= 10.1 || r.chromium && r.version >= 20 ? r.a = n : r.msie && r.version < 10 || r.chrome && r.version < 20 || r.firefox && r.version < 20 || r.safari && r.version < 6 || r.opera && r.version < 10 || r.ios && r.osversion && r.osversion.split(".")[0] < 6 || r.chromium && r.version < 20 ? r.c = n : r.x = n, r
    }

    function i(e) {
        return e.split(".").length
    }

    function s(e, i) {
        var s, o = [];
        if (Array.prototype.map) return Array.prototype.map.call(e, i);
        for (s = 0; s < e.length; s++) o.push(i(e[s]));
        return o
    }

    function o(e) {
        for (var o = Math.max(i(e[0]), i(e[1])), r = s(e, (function(e) {
                var r = o - i(e);
                return s((e += new Array(r + 1).join(".0")).split("."), (function(e) {
                    return new Array(20 - e.length).join("0") + e
                })).reverse()
            })); --o >= 0;) {
            if (r[0][o] > r[1][o]) return 1;
            if (r[0][o] !== r[1][o]) return -1;
            if (0 === o) return 0
        }
    }

    function r(i, s, r) {
        var n = t;
        "string" == typeof s && (r = s, s = void 0), void 0 === s && (s = !1), r && (n = e(r));
        var a = "" + n.version;
        for (var d in i)
            if (i.hasOwnProperty(d) && n[d]) {
                if ("string" != typeof i[d]) throw new Error("Browser version in the minVersion map should be a string: " + d + ": " + String(i));
                return o([a, i[d]]) < 0
            }
        return s
    }
    var n = !0,
        t = e("undefined" != typeof navigator && navigator.userAgent || "");
    return t.test = function(e) {
        for (var i = 0; i < e.length; ++i) {
            var s = e[i];
            if ("string" == typeof s && s in t) return !0
        }
        return !1
    }, t.isUnsupportedBrowser = r, t.compareVersions = o, t.check = function(e, i, s) {
        return !r(e, i, s)
    }, t._detect = e, t.detect = e, t
}));